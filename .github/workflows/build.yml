name: Build and Deploy

on:
  release:
    types: [created]
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  TERM: xterm

jobs:
  lando:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Lando install
        run: |
          sudo curl -fsSL -o /usr/local/bin/lando "https://github.com/lando/cli/releases/download/v3.11.0/lando-linux-x64-v3.11.0"
          sudo chmod +x /usr/local/bin/lando

      - name: Lando cache
        uses: actions/cache@v3
        with:
          path: ~/.lando/cache
          key: lando-3-${{ github.ref }}
          restore-keys: |
            lando-3-

      - name: Lando start
        run: lando start

  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Create env
        run: cp .env.example .env

      - name: Docker cache
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Start containers
        run: docker-compose up -d --build

      - name: Install Drupal
        run: docker-compose exec -T cli drush si --existing-config --account-name=admin -y

  deploy:
    runs-on: ubuntu-latest

    needs: [docker, lando]

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Get Public IP
        id: publicip
        run: |
          response=$(curl -s canhazip.com)
          echo "ip='$response'" >> "$GITHUB_OUTPUT"

      - name: Grant security group IP
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.publicip.outputs.ip }}/32

      - name: Deploy to prod server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.SSH_PATH }}
            git pull origin main
            docker-compose up --build -d

      - name: Revoke security group IP
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.publicip.outputs.ip }}/32
        if: always()

      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@master
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
